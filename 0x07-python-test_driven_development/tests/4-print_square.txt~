The ``4-print_square`` module
======================

Using ``print_square``
-------------------

Importing the function from the module:

	 >>> print_square = __import__("4-print_square").print_square

Checking for module docstring:

	 >>> m = __import__("4-print_square").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:

	 >>> f = __import__("4-print_square").print_square.__doc__
         >>> len(f) > 1
         True

Checking for int values:

	 >>> print_square(4)
	 ####
	 ####
	 ####
	 ####

	 >>> print_square(2)
	 ##
	 ##

	 >>> print_square(-2)
	 Traceback (most recent call last):
	 ...
    	 ValueError: size must be >= 0

Checking for other primitives:

	 >>> print_square('2')
	 Traceback (most recent call last):
	 ...
	 TypeError: size must be an integer

	 >>> print_square(2.2)
	 Traceback (most recent call last):
	 ...
	 TypeError: size must be an integer

	 >>> print_square([2])
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer

	 >>> print_square((2))
	 ##
	 ##

	 >>> print_square((2,2))
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer

	 >>> print_square({2})
	 Traceback (most recent call last):
         ...
         TypeError: size must be an integer

	 >>> print_square(True)
	 Traceback (most recent call last):
	 ...
	 TypeError: size must be an integer

Checking for no arg:

	 >>> print_square()
	 Traceback (most recent call last):
         ...
         TypeError: print_square() missing 1 required positional argument: 'size'

Checking for two args:

	 >>> print_square(2, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_square() takes 1 positional argument but 2 were given

Checking for syntax error:

	 >>> print_square(2 2)
	 SyntaxError: invalid syntax
